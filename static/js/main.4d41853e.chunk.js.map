{"version":3,"sources":["header/Header.tsx","footer/footer.tsx","common/Animation.tsx","common/StyledComponents.tsx","container/Home/ContentHome.tsx","container/About/ContentAbout.tsx","App.tsx","index.tsx"],"names":["Head","Layout","Header","component","className","style","position","width","top","float","background","zIndex","paddingLeft","paddingRight","color","opacity","borderRadius","theme","mode","defaultSelectedKeys","Item","key","onClick","window","open","display","marginLeft","cursor","GithubOutlined","fontSize","FooterView","Footer","NextPage","pageEvent","type","textAlign","bottom","PageButton","animation","PrevPage","height","buttonFade","keyframes","PageAnimation","Component","useEffect","console","log","CSSTransition","in","timeout","classNames","unmountOnExit","appear","ContentDiv","styled","div","CenterDiv","props","left","button","css","Content","ContentHome","minHeight","Step","Steps","histroyData","title","description","tagData","ContentAbout","useState","current","setCurrent","canvasRef","useRef","interval","ctx","getContext","setInterval","humanDrawing","stairsDrawing","clearInterval","x","y","clearRect","beginPath","arc","Math","PI","moveTo","lineTo","count","stroke","i","rect","border","fill","closePath","setTimeout","paddingTop","padding","margin","boxShadow","textDecoration","ref","map","e","marginTop","App","setComponent","page","setPage","mountFlag","setMountFlag","PageArray","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4d41853e.chunk.js","sourcesContent":["import React, { FC, useEffect, ReactNode } from \"react\"\nimport { Layout, Menu } from \"antd\"\nimport { GithubOutlined } from \"@ant-design/icons\"\nconst { Header: Head } = Layout\n\nconst Header: FC<{ component: ReactNode | null }> = ({ component }) => {\n  return (\n    <Layout className=\"layout\" style={{ position: \"fixed\", width: \"100%\", top: 0, float: \"right\" }}>\n      <Head style={{ background: component ? \"white\" : \"rgb(25,25,25)\", zIndex: 1 }}>\n        {/* <Logo></Logo> */}\n        <Menu style={{ paddingLeft: \"10px\", paddingRight: \"10px\", float: \"right\", color: \"black\", opacity: \"0.5\", zIndex: 1, borderRadius: \"100px 100px 100px 100px\" }} theme=\"light\" mode=\"horizontal\" defaultSelectedKeys={[\"1\"]}>\n          <Menu.Item key=\"1\">Home</Menu.Item>\n          <Menu.Item key=\"2\">About</Menu.Item>\n          <Menu.Item key=\"3\">Skill</Menu.Item>\n          <Menu.Item key=\"4\">Project</Menu.Item>\n          <Menu.Item key=\"5\">Contact</Menu.Item>\n          <div\n            onClick={() => {\n              window.open(\"https://github.com/kwonth211/newstart\")\n            }}\n            style={{ display: \"inline\", float: \"right\", marginLeft: \"120px\", cursor: \"pointer\" }}\n          >\n            <GithubOutlined style={{ fontSize: \"22px\" }}></GithubOutlined> GitHub\n          </div>\n          {/* </Menu.Item> */}\n        </Menu>\n      </Head>\n    </Layout>\n  )\n}\nexport default Header\n","import React, { FC, ReactNode } from \"react\"\nimport { Layout } from \"antd\"\n\nimport { PageButton } from \"./../common/StyledComponents\"\n// import * as ReactCSSTransitionGroup from \"react-addons-css-transition-group\"\nimport styled from \"styled-components\"\n\nconst { Footer: FooterView } = Layout\n\n// ⥣⥤\nexport const NextPage: FC<{ pageEvent: Function; component?: ReactNode | undefined | null; type: string }> = ({ pageEvent, component, type }) => {\n  return (\n    <>\n      <FooterView\n        style={{\n          textAlign: \"center\",\n          color: component ? \"black\" : \"white\",\n          background: component ? \"white\" : \"rgb(25,25,25)\",\n          cursor: \"pointer\",\n          position: \"fixed\",\n          bottom: 0,\n          // top: type === \"prev\" ? 0 : \"\",\n          width: \"100%\",\n        }}\n        onClick={() => {\n          pageEvent()\n        }}\n      >\n        <PageButton animation={true}>\n          다음 페이지\n          <br />⥥\n        </PageButton>\n      </FooterView>\n    </>\n  )\n}\n\nexport const PrevPage: FC<{ pageEvent: Function; component?: ReactNode | undefined | null; type: string }> = ({ pageEvent, component, type }) => {\n  return (\n    <>\n      <FooterView\n        style={{\n          textAlign: \"center\",\n          color: component ? \"black\" : \"white\",\n          background: component ? \"white\" : \"rgb(25,25,25)\",\n          cursor: \"pointer\",\n          position: \"fixed\",\n          bottom: 100,\n          top: \"10%\",\n          width: \"100%\",\n          height: \"100px\",\n        }}\n        onClick={() => {\n          pageEvent()\n        }}\n      >\n        <PageButton color={\"black\"}>\n          ⥣ <br />\n          이전 페이지\n        </PageButton>\n      </FooterView>\n    </>\n  )\n}\n","import { keyframes } from \"styled-components\"\nimport React, { FC, ReactNode, useEffect } from \"react\"\nimport \"./style.css\"\nimport { CSSTransition } from \"react-transition-group\"\nimport { NextPage, PrevPage } from \"./../footer\"\nimport { ContentAbout } from \"./../container/\"\nexport const buttonFade = keyframes`\n    from {\n        visibility: visibility;\n    }\n    to {\n        visibility: hidden;\n    }\n    from {\n        visibility: visibility;\n    }\n    to {\n        visibility: hidden;\n    }\n    `\n\n/// animation padding 지우기..\nexport const PageAnimation: FC<{ component: ReactNode; pageEvent: any }> = ({ component: Component, pageEvent }) => {\n  useEffect(() => {\n    console.log(Component)\n    debugger\n  }, [Component])\n  return (\n    <CSSTransition in={true} timeout={400} classNames=\"list-transition\" unmountOnExit appear>\n      <div className=\"list-body\">\n        <PrevPage\n          type={\"next\"}\n          component={Component}\n          pageEvent={() => {\n            pageEvent(\"about\")\n          }}\n        />\n        {Component}\n      </div>\n    </CSSTransition>\n  )\n}\n","import styled, { css } from \"styled-components\"\nimport { buttonFade } from \"./Animation\"\n\ninterface IContentDiv {\n  minHeight: string\n}\ninterface ICenterDiv {\n  left: string\n  top: string\n  fontSize: string\n}\n\ninterface IPageButtion {\n  animation?: boolean\n}\nexport const ContentDiv = styled.div<IContentDiv>`\n  background: rgb(25, 25, 25);\n  width: 100vw;\n  height: 93vh;\n  -webkit-box-shadow: 0 10px 6px -6px rgb(221, 221, 221);\n  -moz-box-shadow: 0 10px 6px -6px rgb(221, 221, 221);\n  box-shadow: 0 10px 6px -6px rgb(221, 221, 221);\n`\nexport const CenterDiv = styled.div`\n  color: white;\n  font-size: ${(props: ICenterDiv) => props.fontSize};\n  // top: ${(props: ICenterDiv) => props.top};\n  // left: ${(props: ICenterDiv) => props.left};\n  position: absolute;\n  left: 0;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  margin: auto;\n  text-align: center;\n  display: block;\n  width: 100%;\n  height: 150px;\n  line-height: 50px;\n`\n\nexport const PageButton = styled.button<IPageButtion>`\n  background: inherit;\n  border: 0px;\n  z-index: 1;\n  cursor: pointer;\n  ${(props) =>\n    props.animation &&\n    css`\n      animation: ${buttonFade} 300ms steps(5, start) infinite alternate;\n    `}\n`\n","import React, { FC } from \"react\"\nimport { Layout } from \"antd\"\nimport { ContentDiv, CenterDiv } from \"../../common/StyledComponents\"\nconst { Content } = Layout\nconst ContentHome: FC = () => {\n  return (\n    <Content>\n      {/* <Breadcrumb style={{ textAlign: \"center\", fontSize: \"16pt\", fontWeight: \"bold\" }}>\n        <Breadcrumb.Item>History</Breadcrumb.Item>\n      </Breadcrumb> */}\n      <ContentDiv minHeight={\"400px\"}>\n        <CenterDiv left={\"48%\"} top={\"45%\"} fontSize={\"17pt\"}>\n          안녕하세요! <br />\n          <div style={{ fontSize: \"19pt\" }}>{\"<Frontend/>\"} 개발자 권태훈 포트폴리오 웹사이트입니다.</div>\n        </CenterDiv>\n      </ContentDiv>\n    </Content>\n  )\n}\n\nexport default ContentHome\n","import React, { FC, useEffect, useState, FunctionComponent, createRef, useRef } from \"react\"\nimport { Layout, Tag, Steps, Divider, Popover } from \"antd\"\nimport \"./style.css\"\nconst { Content } = Layout\nconst { Step } = Steps\n\nconst histroyData = [\n  {\n    title: \"명지전문대학\",\n    description: \"2013/02 ~ 2018/02\",\n  },\n  {\n    title: \"인재 개발원\",\n    description: \"2018/08 ~ 2019/03\",\n  },\n  {\n    title: \"더존비즈온\",\n    description: \"2019/08 ~ 2020/09\",\n  },\n  {\n    title: \"???\",\n    description: \"\",\n  },\n]\n\nconst tagData = [\"front-end\", \"back-end\", \"javascript\", \"typescript\", \"reacthooks\", \"next\", \"node\", \"graphql\"]\nconst ContentAbout: FunctionComponent = () => {\n  let [current, setCurrent] = useState(0)\n  let canvasRef = useRef<HTMLCanvasElement>(null)\n  const interval = useRef<any>()\n  // let [ctx, setCtx] = useState<any>(null)\n\n  useEffect(() => {\n    let canvas = canvasRef.current as HTMLCanvasElement\n    let ctx = canvas.getContext(\"2d\")\n    if (ctx) {\n      interval.current = setInterval(() => {\n        humanDrawing(ctx)\n        stairsDrawing(ctx)\n      }, 20)\n    }\n\n    return () => {\n      clearInterval(interval.current)\n      // let a = document.getElementsByClassName(\"list-body\")\n      // debugger\n    }\n  }, [])\n  let x = 120\n  let y = 100\n  let z = 15\n  let p = 10\n  let count = 0\n  const humanDrawing = (ctx: any) => {\n    console.log(y)\n    if (y > 15) {\n      ctx.clearRect(0, 0, 400, 400)\n      ctx.beginPath()\n      ctx.arc(x, y, 7, 0, 2 * Math.PI)\n      ctx.moveTo(x - 5, y + 5)\n      ctx.lineTo(x - 5, y + 25) //몸\n\n      let count = 0\n      setInterval(() => {\n        if (count < 50) {\n          ctx.moveTo(x - 6, y + 25)\n          ctx.lineTo(x + 7, y + 45) //오른쪽다리\n        } else {\n          // ctx.moveTo(x - 6, y + 25)\n          // ctx.lineTo(x + 7, y + 35) //오른쪽다리\n\n          ctx.moveTo(x - 6, y + 35)\n          ctx.lineTo(x + 7, y + 45) //오른쪽다리\n\n          if (count > 100) count = 0\n        }\n\n        ctx.stroke()\n        count++\n      }, 10)\n\n      ctx.moveTo(x - 6, y + 25)\n      ctx.lineTo(x - 15, y + 45) //왼쪽다리\n      ctx.stroke()\n\n      x += 1.5\n      y -= 0.8\n    }\n  }\n\n  let x_2 = 135\n  let y_2 = 135\n\n  const stairsDrawing = (ctx: any) => {\n    let x = 135\n    let y = 135\n    for (let i = 0; i < 10; i++) {\n      ctx.rect(x, y, 20, 350)\n      x += 20\n      y -= 10\n    }\n\n    // ctx.fillStyle = \"1px solid black\"\n    ctx.border = \"1px solid red\"\n    ctx.fill()\n    ctx.closePath()\n    x -= 0.5\n    y -= 0.8\n    // x_2 += 0.05\n    // y_2 += 0.08\n  }\n\n  useEffect(() => {\n    if (current < 2) {\n      setTimeout(() => {\n        setCurrent(current + 1)\n      }, 500)\n    }\n  }, [current])\n\n  const customDot = (dot: any) => (\n    <Popover\n      content={\n        <span>\n          dsadas\n          {/* step {index} status: {status} */}\n        </span>\n      }\n    >\n      {dot}\n    </Popover>\n  )\n  return (\n    <div>\n      <Content style={{ paddingTop: \"140px\", padding: \"0 50px\", width: \"80%\", margin: \"0 auto\", boxShadow: \"5px 5px 10px 0px rgb(128,128,128)\" }}>\n        <h1 style={{ textAlign: \"center\", textDecoration: \"underline\", paddingTop: \"10px\" }}>About</h1>\n        <div style={{ display: \"inline\", float: \"right\" }}>\n          <canvas ref={canvasRef} />\n        </div>\n        <div className=\"site-layout-content\">\n          하루하루 성장하고 싶은 개발자 입니다. 기본적인 html,css,javascript 를 다를줄 알며 최신 프레임워크 react를 다루는데에도 익숙합니다.\n          <br /> 향후에는 웹 전반적인 fullstack 역량을 길러 개발 전문가가 되는것이 제 꿈입니다.\n          <br />\n          <br />\n          {tagData.map((e, i) => (\n            <Tag color=\"default\">{\"#\" + e}</Tag>\n          ))}\n        </div>\n      </Content>\n\n      <Content style={{ padding: \"30px 50px\", marginTop: \"20px\" }}>\n        <h1 style={{ textAlign: \"center\", textDecoration: \"underline\" }}>History</h1>\n        <Steps current={current}>\n          {histroyData.map((e, i) => (\n            <Step key={e.title} title={e.title} description={e.description} />\n          ))}\n        </Steps>\n        <Divider />\n      </Content>\n    </div>\n  )\n}\n\nexport default ContentAbout\n","import React, { useState, useEffect, ReactNode } from \"react\"\nimport { Header } from \"./header\"\nimport \"antd/dist/antd.css\"\nimport { ContentAbout, ContentHome } from \"./container\"\nimport { NextPage } from \"./footer\"\nimport { PageAnimation } from \"./common/Animation\"\n\nfunction App() {\n  let [component, setComponent] = useState<ReactNode>()\n\n  let [page, setPage] = useState(0)\n\n  const [mountFlag, setMountFlag] = useState(false)\n  const PageArray = [<ContentHome />, <ContentAbout />, <ContentAbout />]\n\n  // useEffect(() => {\n  //   setComponent(<ContentAbout />)\n  // }, [])\n\n  useEffect(() => {\n    setMountFlag(true)\n  }, [])\n\n  useEffect(() => {\n    console.log(page)\n    if (mountFlag && PageArray[page]) {\n      setComponent(PageArray[page])\n    }\n  }, [page])\n\n  const pageEvent = (key: any) => {\n    if (key === \"next\") {\n      if (page < PageArray.length - 1) setPage(page + 1)\n    } else {\n      if (0 < page) setPage(page - 1)\n    }\n  }\n  return (\n    <div style={{ background: \"rgb(249,249,249)\" }}>\n      <Header component={component} />\n\n      {!component ? <ContentHome /> : <PageAnimation component={component} pageEvent={pageEvent} />}\n      <NextPage\n        type={\"next\"}\n        component={component}\n        pageEvent={() => {\n          pageEvent(\"next\")\n        }}\n      />\n    </div>\n  )\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nReactDOM.render(<App />, document.getElementById(\"root\"))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}